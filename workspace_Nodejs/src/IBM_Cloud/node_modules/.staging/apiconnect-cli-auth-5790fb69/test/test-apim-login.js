/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-auth
'use strict';

var path = require('path');
var test = require('tap').test;
var testSupport = require('apiconnect-cli-test-support');

var apic = testSupport.apic(path.resolve(__dirname, '..'));
var apimStacker = testSupport.apimStacker;
var auth = testSupport.auth(apic);
var conf = testSupport.config;
var f = require('util').format;
var logger = testSupport.logger;

apimStacker(function(releaseApimStack, resetApimStack, skipApimAccess) {

  if (skipApimAccess) {
    return;
  }

  test('test login', function(t) {
    logger.clear();
    return auth.login().then(function(res) {
      var output = logger.values(true);
      t.equals(output.length, 1);
      t.equals(output[0], f('Logged into %s successfully', conf.getServer()));
    });
  });

  test('test login with invalid credentials', function(t) {
    return auth.login(conf.defaultUser, 'invalidpassword', conf.getServer())
      .then(t.fail)
      .catch(function(err) {
        t.match(err.message, 'Please verify the server and credentials');
      });
  });

  test('test logout', function(t) {
    logger.clear();
    return apic([ 'logout', '-s', conf.getServer() ]).then(function(res) {
      var output = logger.values(true);
      t.equals(output.length, 1);
      t.equals(output[0], f('Logged out of server %s', conf.getServer()));
    });
  });

  test('cleanup', function(t) {
    releaseApimStack();
    t.end();
  });
});

